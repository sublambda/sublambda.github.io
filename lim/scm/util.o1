// File generated by Gambit v4.9.4
// Link info: (409004 (js ((compactness 9))) "util" (("util")) (module_register entrypt_init returnpt_init ctrlpt_init parententrypt_init check_procedure box cons string base92_decode r3 glo-println flonumbox inttemp1 inttemp2 flonump jsnumberp build_rest r4 closure_alloc make_interned_symbol glo check_procedure_glo poll peps r2 sp stack r0 r1 wrong_nargs nargs) (callback-thread-hack ##make-root-thread call-with-input-string cpu-time ##callback-loop thread pretty-print ##thread-start! with-output-to-string ##make-tgroup ##host-function-memoized println) (println) (println) #f)

_cst0__util = _i("call-with-input-string");

_cst1__util = _i("with-output-to-string");

_cst2__util = _i("pretty-print");

_cst3__util = _i("cpu-time");

_cst4__util = _i("println");

_cst5__util = _i("callback-loop");

_cst6__util = _i("##make-tgroup");

_cst7__util = _i("##callback-loop");

_cst8__util = _i("##make-root-thread");

_cst9__util = _i("##thread-start!");

_cst10__util = _X(_i("include"),_X(new _ScmString(_z("cacaRcVcFcPRcPcDcFcUcRcVQcVcFcP")),null));

_cst15__util = new _ScmString(_z("KcDcVc!cQcFCcIcXcQcFcWcLcRcQCKcBe,TOcBe,ULCc^-CcUcHcWcXcUcQCcVcHcWc7cLcPcHcRcXcWKcBe,TOcBe,UL^-c`L"));

_cst14__util = new _Box(_cst15__util);

_cst16__util = _i("##host-function-memoized");

_cst17__util = _i("thread");

_cst18__util = _i("callback-thread-hack");

_cst20__util = new _ScmString(_z("KcDcVc!cQcFCcIcXcQcFcWcLcRcQCKcBe,TLCc^-CcUcHcWcXcUcQCcVcHcWc7cLcPcHcRcXcWKcBe,TOSL^-c`L"));

_cst19__util = new _Box(_cst20__util);

_m(_bb1_util_23_ = () => {
if (_n !== 0) {
return _w(_bb1_util_23_);
}
_a = void 0;
return _r;
},-1,_i("util#"),!1,!0);



_m(_bb1_eval_2d_string = () => {
if (_n !== 1) {
return _w(_bb1_eval_2d_string);
}
_s[_t+1] = _r;
_b = _e["read"];
++_t;
return _p(_bb2_eval_2d_string);
},-1,_i("eval-string"),!1,!0);

_j(_bb2_eval_2d_string = () => {
_r = _bb3_eval_2d_string;
_n = 2;
return _u(_g["call-with-input-string"],_cst0__util)();
});

_k(_bb3_eval_2d_string = () => {
_r = _s[_t];
return _p(_bb4_eval_2d_string);
},1,1);

_j(_bb4_eval_2d_string = () => {
_n = 1;
--_t;
return _e["eval"]();
});



_m(_bb1_pps = () => {
if (_n !== 1) {
return _w(_bb1_pps);
}
var closure0 = _closure_alloc([_bb3_pps,_a]);
_s[_t+1] = closure0;
_a = _s[_t+1];
++_t;
return _p(_bb2_pps);
},-1,_i("pps"),!1,!0);

_l(_bb3_pps = () => {
if (_n !== 0) {
return _w(_d);
}
_a = _d(!0)[1];
return _p(_bb4_pps);
},1);

_j(_bb2_pps = () => {
_n = 1;
--_t;
return _u(_g["with-output-to-string"],_cst1__util)();
});

_j(_bb4_pps = () => {
_n = 1;
return _u(_g["pretty-print"],_cst2__util)();
});



_m(_bb1_timing = () => {
if (_n === 1) {
_b = null;
} else {
if (!_build_rest(1)) {
return _w(_bb1_timing);
}
}
_s[_t+1] = _r;
_s[_t+2] = _a;
_s[_t+3] = _b;
_t += 3;
return _p(_bb2_timing);
},-1,_i("timing"),!1,!0);

_j(_bb2_timing = () => {
_r = _bb3_timing;
_n = 0;
return _u(_g["cpu-time"],_cst3__util)();
});

_k(_bb3_timing = () => {
_s[_t+1] = _a;
_b = _s[_t];
_a = _s[_t-1];
_r = _bb4_timing;
_n = 2;
++_t;
return _e["apply"]();
},3,1);

_k(_bb4_timing = () => {
_s[_t-2] = _a;
_r = _bb5_timing;
_n = 0;
return _u(_g["cpu-time"],_cst3__util)();
},4,1);

_k(_bb5_timing = () => {
if (_y(_s[_t])) {
return _bb6_timing();
} else {
return _bb15_timing();
}
},4,1);

_j(_bb6_timing = () => {
if (_y(_a)) {
return _bb7_timing();
} else {
return _bb15_timing();
}
});

_j(_bb15_timing = () => {
if (_f(_s[_t])) {
return _bb16_timing();
} else {
return _bb18_timing();
}
});

_j(_bb7_timing = () => {
_b = (_h = (_o = _a - _s[_t])<<2>>2) === _o && _h;
if (!(_b === !1)) {
return _bb8_timing();
} else {
return _bb13_timing();
}
});

_j(_bb16_timing = () => {
if (_f(_a)) {
return _bb17_timing();
} else {
return _bb18_timing();
}
});

_j(_bb18_timing = () => {
_b = _s[_t];
_r = _bb9_timing;
_n = 2;
_t -= 2;
return _e["-"]();
});

_j(_bb8_timing = () => {
_t -= 2;
return _bb11_timing();
});

_j(_bb13_timing = () => {
_b = _s[_t];
_r = _bb14_timing;
_n = 2;
_t -= 2;
return _e["-"]();
});

_j(_bb17_timing = () => {
_a = _F(_a.a - _s[_t].a);
_t -= 2;
return _bb10_timing();
});

_k(_bb9_timing = () => {
return _bb10_timing();
},2,1);

_j(_bb11_timing = () => {
_a = _b;
_r = _bb12_timing;
_n = 1;
return _u(_g["println"],_cst4__util)();
});

_k(_bb14_timing = () => {
_b = _a;
return _bb11_timing();
},2,1);

_j(_bb10_timing = () => {
_b = _a;
return _bb11_timing();
});

_k(_bb12_timing = () => {
_a = _s[_t];
_t -= 2;
return _s[_t+1]();
},2,1);



_m(_bb1__23__23_start_2d_callback_2d_loop_2d_thread = () => {
if (_n !== 0) {
return _w(_bb1__23__23_start_2d_callback_2d_loop_2d_thread);
}
_s[_t+1] = _r;
_b = !1;
_a = _cst5__util;
++_t;
return _p(_bb2__23__23_start_2d_callback_2d_loop_2d_thread);
},-1,_i("##start-callback-loop-thread"),!1,!0);

_j(_bb2__23__23_start_2d_callback_2d_loop_2d_thread = () => {
_r = _bb3__23__23_start_2d_callback_2d_loop_2d_thread;
_n = 2;
return _u(_g["##make-tgroup"],_cst6__util)();
});

_k(_bb3__23__23_start_2d_callback_2d_loop_2d_thread = () => {
_c = _a;
_b = _cst5__util;
_a = _g["##callback-loop"];
_r = _bb4__23__23_start_2d_callback_2d_loop_2d_thread;
_n = 3;
return _u(_g["##make-root-thread"],_cst8__util)();
},1,1);

_k(_bb4__23__23_start_2d_callback_2d_loop_2d_thread = () => {
_r = _s[_t];
return _p(_bb5__23__23_start_2d_callback_2d_loop_2d_thread);
},1,1);

_j(_bb5__23__23_start_2d_callback_2d_loop_2d_thread = () => {
_n = 1;
--_t;
return _u(_g["##thread-start!"],_cst9__util)();
});



_m(_bb1_include_2d_macros = () => {
if (_n !== 0) {
return _w(_bb1_include_2d_macros);
}
_a = _cst10__util;
return _p(_bb2_include_2d_macros);
},-1,_i("include-macros"),!1,!0);

_j(_bb2_include_2d_macros = () => {
_n = 1;
return _e["eval"]();
});



_m(_bb1_set_2d_timeout = () => {
if (_n !== 2) {
return _w(_bb1_set_2d_timeout);
}
_s[_t+1] = _r;
_s[_t+2] = _a;
_s[_t+3] = _b;
_a = _cst14__util;
_t += 3;
return _p(_bb2_set_2d_timeout);
},-1,_i("set-timeout"),!1,!0);

_j(_bb2_set_2d_timeout = () => {
_r = _bb3_set_2d_timeout;
_n = 1;
return _u(_g["##host-function-memoized"],_cst16__util)();
});

_k(_bb3_set_2d_timeout = () => {
_b = _s[_t];
_s[_t] = _a;
_a = _s[_t-1];
_r = _s[_t-2];
return _p(_bb4_set_2d_timeout);
},3,1);

_j(_bb4_set_2d_timeout = () => {
_n = 2;
_t -= 3;
return _check_procedure(_s[_t+3])();
});



_m(_bb1_hacky_2d_thread = () => {
if (_n !== 1) {
return _w(_bb1_hacky_2d_thread);
}
var closure0 = _closure_alloc([_bb3_hacky_2d_thread,_a]);
_s[_t+1] = closure0;
_a = _s[_t+1];
++_t;
return _p(_bb2_hacky_2d_thread);
},-1,_i("hacky-thread"),!1,!0);

_l(_bb3_hacky_2d_thread = () => {
if (_n !== 0) {
return _w(_d);
}
_s[_t+1] = _r;
++_t;
return _p(_bb4_hacky_2d_thread);
},1);

_j(_bb2_hacky_2d_thread = () => {
_n = 1;
--_t;
return _u(_g["thread"],_cst17__util)();
});

_j(_bb4_hacky_2d_thread = () => {
_r = _bb5_hacky_2d_thread;
_n = 0;
return _check_procedure(_d(!0)[1])();
});

_k(_bb5_hacky_2d_thread = () => {
_r = _s[_t];
return _p(_bb6_hacky_2d_thread);
},1,1);

_j(_bb6_hacky_2d_thread = () => {
_n = 0;
--_t;
return _u(_g["callback-thread-hack"],_cst18__util)();
});



_m(_bb1_later = () => {
if (_n !== 1) {
return _w(_bb1_later);
}
_s[_t+1] = _r;
_s[_t+2] = _a;
_a = _cst19__util;
_t += 2;
return _p(_bb2_later);
},-1,_i("later"),!1,!0);

_j(_bb2_later = () => {
_r = _bb3_later;
_n = 1;
return _u(_g["##host-function-memoized"],_cst16__util)();
});

_k(_bb3_later = () => {
_s[_t+1] = _a;
_a = _s[_t];
_r = _s[_t-1];
++_t;
return _p(_bb4_later);
},2,1);

_j(_bb4_later = () => {
_n = 1;
_t -= 3;
return _check_procedure(_s[_t+3])();
});



_module_register([[_i("util")],[_i("_six/js")],null,1,_bb1_util_23_,!1]);

